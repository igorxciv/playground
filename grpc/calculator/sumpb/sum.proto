syntax = "proto3";

package sum;
option go_package = "./sumpb";

message SumRequest {
    int32 firstNumber = 1;
    int32 secondNumber = 2;
}

message SumResponse {
    int32 result = 1;
}

message PrimeRequest {
    int32 number = 1;
}

message PrimeResponse {
    int32 number = 1;
}

message ComputeAverageRequest {
    int32 number = 1;
}

message ComputeAverageResponse {
    float result = 1;
}

message FindMaximumRequest {
    int32 number = 1;
}

message FindMaximumResponse {
    int32 result = 1;
}

message SquareRootRequest {
    int32 number = 1;
}

message SquareRootResponse {
    double number = 1;
}

service SumService {
    rpc Sum(SumRequest) returns (SumResponse) {};
    rpc Prime(PrimeRequest) returns (stream PrimeResponse) {};
    rpc ComputeAverage(stream ComputeAverageRequest) returns (ComputeAverageResponse) {};
    rpc FindMaximum(stream FindMaximumRequest) returns (stream FindMaximumResponse) {};

    // error handling
    // this RPC will throw an exception if the sent number is negative number
    // the error being sent is of type INVALID_ARGUMENT
    rpc SquareRoot(SquareRootRequest) returns (SquareRootResponse) {};
}